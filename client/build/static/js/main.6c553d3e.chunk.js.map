{"version":3,"sources":["components/Product.js","reducers/Cart.js","reducers/Items.js","reducers/index.js","store.js","actions/cartActions.js","actions/types.js","views/Home.js","views/Item.js","components/Total.js","components/Order.js","views/Cart.js","views/NotFound.js","actions/itemActions.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","Card","className","Header","Title","to","product","_id","name","Img","variant","src","image","fluid","Body","price","toFixed","full","empty","x","rating","push","key","y","Footer","Button","onClick","add","block","initialState","cart","amount","total","items","combineReducers","state","action","type","setAmount","setTotal","payload","forEach","item","addAmount","addTotal","addCart","updateTotal","updateAmount","updateCart","map","order","deleteTotal","deleteAmount","deleteCart","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","set","orders","dispatch","update","remove","Home","axios","post","quantity","res","data","console","log","listProducts","this","Col","xs","sm","md","align","handleAdd","Jumbotron","Container","Row","Component","connect","Item","handleChange","bind","handleSubmit","e","preventDefault","match","params","id","setState","target","value","show","length","Image","description","Form","onSubmit","Control","as","onChange","Total","Order","useState","setQuantity","Media","width","alt","Group","controlId","change","delete","Cart","patch","listOrders","handleDelete","Table","responsive","NotFound","products","Navigation","Navbar","bg","Brand","Toggle","aria-controls","Collapse","inline","Badge","pill","defaults","baseURL","App","get","setCart","setItems","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6c553d3e.chunk.js","sourcesContent":["import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nexport default function Product(props){\n      const rating = () => {\n        let full = []\n        let empty = []\n        for(let x = 0; x<props.product.rating; x++){\n          full.push(<i className=\"material-icons\" key={x}> star </i>)\n        }\n        for(let y = 0; y<(5-props.product.rating); y++){\n          empty.push(<i className=\"material-icons\" key={y + 5}> star_border </i>)\n        }\n        return[full,empty]\n      }\n      return(\n        <Card className='my-5 mx-5 h-100'>\n          <Card.Header>\n            <Card.Title><Link to={`/product/${props.product._id}`}><p className='text-left'>{props.product.name}</p></Link></Card.Title>\n          </Card.Header>\n          <Card.Img variant=\"top\" src={`http://localhost:4000/${props.product.image}`} fluid=\"true\"/>\n          <Card.Body>\n            <p className='text-left'>${props.product.price.toFixed(2)}</p>\n            <div className='text-left'>{rating()}</div>        \n          </Card.Body>\n          <Card.Footer className='text-left' variant='light'>\n              <Button variant='primary' onClick={() => {props.add(props.product)}} block>Add</Button>\n          </Card.Footer>\n        </Card>\n      )\n      \n}","const initialState = {\n    cart:[],\n    amount:0,\n    total:0\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case 'SETCART':\n            let setAmount = 0\n            let setTotal = 0\n            action.payload.forEach(item => {\n               setAmount++\n               setTotal = setTotal + item.total \n            })\n            return{\n                total:setTotal,\n                amount:setAmount,\n                cart:action.payload\n            }\n        case 'ADD':\n            let addAmount = 0\n            let addTotal = 0\n            let addCart = [...state.cart,action.payload]\n            addCart.forEach(item => {\n                addAmount = addAmount + 1\n                addTotal = addTotal + item.total\n            })\n            return{\n                total:addTotal,\n                amount:addAmount,\n                cart:addCart\n            }\n        case 'UPDATE':\n            let updateTotal = 0\n            let updateAmount = 0\n            let updateCart = state.cart.map(order => {\n                if(order._id === action.payload._id){\n                    order = action.payload\n                }\n                return order\n            })\n            updateCart.forEach(order => {\n                updateTotal = updateTotal + order.total\n                updateAmount++\n            })\n            return{\n                total:updateTotal,\n                amount:updateAmount,\n                cart:updateCart\n            }\n        case 'DELETE':\n            let deleteTotal = 0\n            let deleteAmount = 0\n            const deleteCart = state.cart.filter(order => order !== action.payload)\n            deleteCart.forEach(order => {\n                deleteTotal = deleteTotal + order.total\n                deleteAmount++\n            })\n            return{\n                cart:deleteCart,\n                total:deleteTotal,\n                amount:deleteAmount\n            }\n        default:\n            return state;\n    }\n}","const initialState = {\n    items:[]\n}\n\nexport default function(state = initialState,action){\n    switch(action.type){\n        case 'SETITEMS':\n           return{\n               items:action.payload\n           }  \n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport Cart from './Cart'\nimport Items from './Items'\n\nexport default combineReducers({\n    cart:Cart,\n    items:Items\n})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;","import {SETCART, ADD, UPDATE, DELETE} from './types'\n\nexport const set = (orders) =>{\n    return dispatch => {\n        dispatch({\n            type:SETCART, \n            payload:orders\n        })\n}\n}\n\nexport const add = (order) =>{\n    return dispatch => {\n        dispatch({\n            type:ADD, \n            payload:order\n        })\n}\n}\n\nexport const update = (order) =>{\n    return dispatch => {\n        dispatch({\n            type:UPDATE, \n            payload:order\n        })\n}\n}\nexport const remove = (order) =>{\n    return dispatch => {\n        dispatch({\n            type:DELETE,\n            payload:order\n        })\n    }\n}\n","export const SETITEMS = 'SETITEMS'\nexport const SETCART = 'SETCART'\nexport const ADD = 'ADD'\nexport const UPDATE = 'UPDATE'\nexport const DELETE = 'DELETE'","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Container,Jumbotron, Row, Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport axios from 'axios'\nimport store from '../store'\nimport {add} from '../actions/cartActions'\nclass Home extends Component{\n    async handleAdd(product){\n        try{\n            let res = await axios.post('http://localhost:4000/api/orders',{quantity:1,product:product._id})\n            store.dispatch(add(res.data))\n        }catch(err){\n            console.log(err)\n        }\n    }\n    render(){\n        let listProducts = this.props.items.map(item => {\n            return(\n                <Col key={item._id} className='my-5' xs={12} sm={6} md={4} align='center'>\n                    <Product product={item} add={this.handleAdd}/>\n                </Col>\n            )\n        })\n        return(\n            <div>\n            <Jumbotron>\n            <h1>Hello, Customer</h1>\n            <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dictum varius duis at consectetur lorem\n            </p>\n            </Jumbotron>\n            <Container>\n                <Row>\n                    {listProducts}\n                </Row>\n            </Container>\n            </div>\n         )\n   } \n}\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items\n})\nexport default connect(mapStateToProps)(Home)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Row, Container, Col, Image, Button, Form} from 'react-bootstrap'\nimport axios from 'axios'\nimport store from '../store'\nimport {add} from '../actions/cartActions'\nclass Item extends Component{\n  constructor(props){\n    super(props);\n    this.state = {quantity: 1};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  async handleSubmit(e){\n    e.preventDefault();\n    try{\n        let res = await axios.post('http://localhost:4000/api/orders',{quantity:this.state.quantity,product:this.props.items.filter(item => item._id === this.props.match.params.id)[0]._id})\n        store.dispatch(add(res.data))\n    }catch(err){\n        console.log(err)\n    }\n  }\n  handleChange(e){\n    this.setState({quantity:e.target.value})\n  }\n   render(){\n        let item = this.props.items.filter(item => item._id === this.props.match.params.id)\n        const rating = () => {\n            let full = []\n            let empty = []\n            for(let x = 0; x<item[0].rating; x++){\n              full.push(<i className=\"material-icons\" key={x}> star </i>)\n            }\n            for(let y = 0; y<(5-item[0].rating); y++){\n              empty.push(<i className=\"material-icons\" key={y + 5}> star_border </i>)\n            }\n            return[full,empty]\n          }\n      \n        let show = item.length > 0 ? (\n                <Row className='mt-5'>\n                   <Col xs={12} sm={12} md={8}>\n                        <Image variant=\"top\" src={`http://localhost:4000/${item[0].image}`} fluid className='mt-2'/>\n                    </Col>\n                    <Col xs={12} sm={12} md={4}>\n                        <div className='my-2'>\n                        <h1 className='text-right'>{item[0].name}</h1>\n                        <p className='text-right'>{item[0].description}</p>\n                        <p className='text-right'>{rating()}</p>\n                        </div>\n                        <Form className='float-md-right' onSubmit={this.handleSubmit}>\n                          <Form.Control as=\"select\" onChange={this.handleChange}>\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                          <option>5</option>\n                          </Form.Control>\n                          <Button variant='primary' type='submit' block>Add</Button>\n                        </Form>\n                    </Col>\n                </Row>\n      ):(\n            <h1>Product Not Found</h1>\n      )\n       return(\n           <Container fluid className=\"mh-100\">\n               {show}\n            </Container>\n       )\n   } \n}\n\nconst mapStateToProps = (state) => ({\n    items: state.items.items\n})\nexport default connect(mapStateToProps)(Item)","import React from 'react'\nimport {Card} from 'react-bootstrap'\n\nexport default function Total(props){\n    return(\n        <Card>\n            <Card.Header>\n                <p>Total</p>\n            </Card.Header>\n            <Card.Body className='py-2 px-2'>\n                <span className='text-center align-center display-2'>${props.total}</span>\n            </Card.Body>\n        </Card>\n    )\n}","import React, {useState} from 'react'\nimport {Image, Form, Media, Button} from 'react-bootstrap'\n\nexport default function Order(props){\n    const [quantity, setQuantity] = useState(props.order.quantity);\n    return(\n        <tr>\n        <td>\n            <Media>\n            <Image\n                width={128}\n                className=\"mr-3\"\n                src={`http://localhost:4000/${props.order.product.image}`}\n                alt=\"Generic placeholder\"\n            />\n            <Media.Body className='text-left'>\n                <h5>{props.order.product.name}</h5>\n                <p>{props.order.product.description}</p>\n            </Media.Body>\n            </Media>\n        </td>\n        <td>\n            <span className='align-center'>${props.order.product.price.toFixed(2)}</span>\n        </td>\n        <td>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n        <Form.Control as=\"select\" value={quantity} onChange={(e) => {props.change({quantity:e.target.value, order:props.order}); setQuantity(e.target.value)}}>\n        <option>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        </Form.Control>\n        </Form.Group>\n        </td>\n        <td>\n        <Button variant='outline-danger' onClick={() => {props.delete(props.order)}}>\n        <i className=\"material-icons\">\n        delete_outline\n        </i>\n        </Button>\n        </td>\n    </tr>\n    )\n}\n","import React, {Component} from 'react'\nimport Total from '../components/Total'\nimport {connect} from 'react-redux'\nimport Order from '../components/Order'\nimport { Container, Row, Col, Table} from 'react-bootstrap'\nimport store from '../store'\nimport {remove, update} from '../actions/cartActions'\nimport axios from 'axios'\n\nclass Cart extends Component{\n    async handleDelete(order){\n        try{\n            await axios.delete(`/api/orders/${order._id}`)\n            store.dispatch(remove(order))    \n        }catch(err){\n            console.log(err)\n        }\n    }\n    async handleChange(change){\n        try{\n            let res = await axios.patch(`/api/orders/${change.order._id}`,{quantity:change.quantity})\n            store.dispatch(update(res.data))\n        }catch(err){\n            console.log(err)\n        }   \n    }\n   render(){\n       const listOrders = this.props.cart.map(item => {\n            return(<Order key={item._id} order={item}  change={this.handleChange} delete={this.handleDelete}/>)\n       })\n       return(\n           <div>\n               <Container fluid className='py-5 px-5'>\n                   <Row>\n                       <Col xs={12} sm={12} md={9} align='center'>\n                       <Table responsive>\n                            <thead>\n                                <tr>\n                                <th className='text-left'>Item</th>\n                                <th>Price</th>\n                                <th>Quantity</th>\n                                <th>Remove</th>\n                                </tr> \n                            </thead>\n                            <tbody>\n                            {listOrders}\n                            </tbody>\n                        </Table>\n                       </Col>\n                       <Col xs={12} sm={12} md={3} align='center'>\n                            <Total total={this.props.total}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n       )\n   } \n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cart.cart,\n    total: state.cart.total,\n    amount: state.cart.amount\n})\nexport default connect(mapStateToProps)(Cart)","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nconst NotFound = () => {\n    return(\n        <div>\n            <Container fluid className='text-left py-5 px-5'>\n                <h1 className='display-1'>404</h1>\n                <hr/>\n                <h1>Page Not Found</h1>\n            </Container>\n        </div>\n    )\n}\n\nexport default NotFound","import {SETITEMS} from './types'\n\nexport const set = (products) =>{\n    return dispatch => {\n        dispatch({\n            type:SETITEMS, \n            payload:products\n        })\n}\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Navbar, Form, Badge, Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nclass Navigation extends Component{\n  render(){\n    return (\n      <div>\n      <Navbar bg=\"light\" variant=\"light\">\n            <Link to='/'>\n              <Navbar.Brand>Clothing Store</Navbar.Brand>\n            </Link>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n              <Form inline>\n              <Link to=\"/cart\">\n              <Button variant='light' block>\n              <i className=\"material-icons\">\n              shopping_cart\n              </i>\n              <Badge variant='danger'pill>\n                      {this.props.amount}\n              </Badge> \n              </Button>\n              </Link>\n              </Form>\n            </Navbar.Collapse>\n          </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  amount: state.cart.amount\n})\nexport default connect(mapStateToProps)(Navigation)","import React, {Component} from 'react';\nimport {Provider} from 'react-redux'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from './views/Home'\nimport Item from './views/Item'\nimport Cart from './views/Cart'\nimport NotFound from './views/NotFound'\nimport axios from 'axios'\nimport {set as setCart} from './actions/cartActions'\nimport {set as setItems} from './actions/itemActions'\nimport Navigation from './components/Navigation'\nimport store from './store'\nimport './App.css'\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nclass App extends Component{\n  async componentDidMount() {\n    let products = await axios.get('/api/products')\n    let orders = await axios.get('/api/orders')\n    store.dispatch(setCart(orders.data))\n    store.dispatch(setItems(products.data))\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Provider store={store}>\n            <Navigation/>\n            <Switch>\n              <Route path='/' exact component={Home}/>\n              <Route path='/cart' exact component={Cart}/>\n              <Route path='/product/:id' component={Item}/>\n              <Route path='*' component={NotFound}></Route>                \n            </Switch>\n          </Provider>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}